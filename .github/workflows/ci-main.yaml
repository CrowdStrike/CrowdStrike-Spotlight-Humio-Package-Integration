name: ci-main
on:
  push:
    branches:
      - "main"
      - "releases/*"
      - "develop"
      - "next*"
  pull_request:
    branches:
      - "main"
      - "releases/*"
      - "develop"
      - "next*"
jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      container_tags: ${{ steps.docker_action_meta.outputs.tags }}
      container_labels: ${{ steps.docker_action_meta.outputs.labels }}
      container_buildtime: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.created'] }}
      container_version: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.version'] }}
      container_revision: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.revision'] }}
      container_base: ${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: false
          persist-credentials: false
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Semantic Release
        id: version
        uses: cycjimmy/semantic-release-action@v3.4.2
        with:
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/git
            semantic-release-helm
            @google/semantic-release-replace-plugin
            conventional-changelog-conventionalcommits
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: docker_action_meta
        uses: docker/metadata-action@v3.5.0
        with:
          images: ghcr.io/${{ github.repository }}/container
          tags: |
            type=sha,format=long
            type=sha
            type=semver,pattern={{version}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,pattern={{major}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.new_release_version }}
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag

  build_action:
    runs-on: ubuntu-latest
    name: Build Action
    needs:
      - meta
    permissions:
      packages: write
    steps:
      # To use this repository's private action,
      # you must check out the repository
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: false
          persist-credentials: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push action
        id: docker_action_build
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          file: Dockerfile
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64,linux/arm64
          push: true
          #tags: ${{ needs.meta.outputs.container_tags }}
          tags: ${{ needs.meta.outputs.container_base }}
          labels: ${{ needs.meta.outputs.container_labels }}
          build-args: |
            BUILDTIME=${{ needs.meta.outputs.container_buildtime }}
            VERSION=${{ needs.meta.outputs.container_version }}
            REVISION=${{ needs.meta.outputs.container_revision }}
          cache-from: type=registry,ref=${{ needs.meta.outputs.container_base }}
          cache-to: type=inline
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build_action
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: false
          persist-credentials: false
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Semantic Release
        id: version
        uses: cycjimmy/semantic-release-action@v3.4.2
        with:
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/git
            semantic-release-helm
            @google/semantic-release-replace-plugin
            conventional-changelog-conventionalcommits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
